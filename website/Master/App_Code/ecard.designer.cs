#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dryden_database")]
public partial class ecardDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertE_card(E_card instance);
  partial void UpdateE_card(E_card instance);
  partial void DeleteE_card(E_card instance);
  #endregion
	
	public ecardDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["dryden_databaseConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public ecardDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public ecardDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public ecardDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public ecardDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<E_card> E_cards
	{
		get
		{
			return this.GetTable<E_card>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.E_cards")]
public partial class E_card : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _name;
	
	private string _recipient;
	
	private string _background;
	
	private string _font;
	
	private string _size;
	
	private string _message;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnrecipientChanging(string value);
    partial void OnrecipientChanged();
    partial void OnbackgroundChanging(string value);
    partial void OnbackgroundChanged();
    partial void OnfontChanging(string value);
    partial void OnfontChanged();
    partial void OnsizeChanging(string value);
    partial void OnsizeChanged();
    partial void OnmessageChanging(string value);
    partial void OnmessageChanged();
    #endregion
	
	public E_card()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string name
	{
		get
		{
			return this._name;
		}
		set
		{
			if ((this._name != value))
			{
				this.OnnameChanging(value);
				this.SendPropertyChanging();
				this._name = value;
				this.SendPropertyChanged("name");
				this.OnnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recipient", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string recipient
	{
		get
		{
			return this._recipient;
		}
		set
		{
			if ((this._recipient != value))
			{
				this.OnrecipientChanging(value);
				this.SendPropertyChanging();
				this._recipient = value;
				this.SendPropertyChanged("recipient");
				this.OnrecipientChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_background", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string background
	{
		get
		{
			return this._background;
		}
		set
		{
			if ((this._background != value))
			{
				this.OnbackgroundChanging(value);
				this.SendPropertyChanging();
				this._background = value;
				this.SendPropertyChanged("background");
				this.OnbackgroundChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_font", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string font
	{
		get
		{
			return this._font;
		}
		set
		{
			if ((this._font != value))
			{
				this.OnfontChanging(value);
				this.SendPropertyChanging();
				this._font = value;
				this.SendPropertyChanged("font");
				this.OnfontChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_size", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
	public string size
	{
		get
		{
			return this._size;
		}
		set
		{
			if ((this._size != value))
			{
				this.OnsizeChanging(value);
				this.SendPropertyChanging();
				this._size = value;
				this.SendPropertyChanged("size");
				this.OnsizeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string message
	{
		get
		{
			return this._message;
		}
		set
		{
			if ((this._message != value))
			{
				this.OnmessageChanging(value);
				this.SendPropertyChanging();
				this._message = value;
				this.SendPropertyChanged("message");
				this.OnmessageChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
